import subprocess
import optparse
import re


def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="Interface for changing mac address")
    parser.add_option("-m", "--mac", dest="new_mac", help="new mac address")
    (option, argument) = parser.parse_args()
    if not option.interface:
        parser.error("[-] Please enter an interface for changing MAC address using -i/--interface flag")
    elif not option.new_mac:
        parser.error("[-] Please enter new MAC address for changing MAC address using -m/--mac flag")
    else:
        return parser.parse_args()


def get_current_mac(options_this,firstcheck=1):
    if firstcheck == 0:
        if subprocess.call(["ifconfig", options_this.interface]):
            print("Interface not found")
            exit()
    ifconfig_result = subprocess.check_output(["ifconfig", options_this.interface])
    var = r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w"
    ifconfig_result = str(ifconfig_result, 'utf-8')
    ifconfig_mac_search_res = re.search(var, ifconfig_result)
    if ifconfig_mac_search_res:
        return str(ifconfig_mac_search_res.group(0))
    else:
        return ifconfig_mac_search_res


def mac_change(interface, new_mac):
    subprocess.call(['ifconfig', interface, 'down'])
    subprocess.call(['ifconfig', interface, 'hw', 'ether', new_mac])
    subprocess.call(['ifconfig', interface, 'up'])


def is_found(mac):
    if not mac:
        print("MAC Address not found")
        exit()


def change_mac(old_mac, options_this):
    is_found(old_mac)
    print("[+] Mac address before changes - : ")
    print(old_mac)
    # changing mac
    mac_change(options.interface, options_this.new_mac)
    changed_mac = get_current_mac(options)
    print("[+] Mac address after changes - : ")
    print(changed_mac)
    return changed_mac


(options, arguments) = get_arguments()
print("Interface = ", options.interface)
print("Requested MAC = ", options.new_mac)
currentmac = get_current_mac(options,0)
is_found(currentmac)
print("[+] Current MAC = ", currentmac)
if options.new_mac == currentmac:
    print("MAC Addresses already equal")
else:
    newmac = change_mac(currentmac, options)
    if newmac != currentmac:
        print("[+] MAC Address changed successfully")
    else:
        print("[-] MAC cannot be changed")
